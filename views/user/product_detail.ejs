<%-include("../partials/user/header")%>

<div class="container-fluid bg-secondary mb-5">
  <div
    class="d-flex flex-column align-items-center justify-content-center"
    style="min-height: 300px"
  >
    <h1 class="font-weight-semi-bold text-uppercase mb-3">Shop Detail</h1>
    <div class="d-inline-flex">
      <p class="m-0"><a href="/">Home</a></p>
      <p class="m-0 px-2">-</p>
      <p class="m-0">Shop</p>
      <p class="m-0 px-2">-</p>
      <p class="m-0">Shop Detail</p>
    </div>
  </div>
</div>

<div class="container-fluid py-5">
  <div class="row px-xl-5">
    <div class="col-lg-5 pb-5">
      <div id="product-carousel" class="carousel slide" data-ride="carousel">
        <div class="carousel-inner border">
          <div class="carousel-item active">
            <div class="zoom-container">
              <img
                class="w-100 h-100 zoom-image"
                src="<%= product.images[0] %>"
                alt="Image"
              />
            </div>
          </div>
          <div class="carousel-item">
            <div class="zoom-container">
              <img
                class="w-100 h-100 zoom-image"
                src="<%= product.images[1] %>"
                alt="Image"
              />
            </div>
          </div>
          <div class="carousel-item">
            <div class="zoom-container">
              <img
                class="w-100 h-100 zoom-image"
                src="<%= product.images[2] %>"
                alt="Image"
              />
            </div>
          </div>
        </div>
        <a
          class="carousel-control-prev"
          href="#product-carousel"
          data-slide="prev"
        >
          <i class="fa fa-2x fa-angle-left text-dark"></i>
        </a>
        <a
          class="carousel-control-next"
          href="#product-carousel"
          data-slide="next"
        >
          <i class="fa fa-2x fa-angle-right text-dark"></i>
        </a>
      </div>
    </div>

    <div class="col-lg-7 pb-5">
      <h3 class="font-weight-semi-bold"><%= product.productName %></h3>
      <h3 class="font-weight-semi-bold mb-4">
        â‚¹<%= product.promotionalPrice %>.00
      </h3>
      <p class="mb-4"><%= product.productDescription %></p>

      <div class="d-flex align-items-center mb-4 pt-2">
        <div class="input-group quantity mr-5" style="width: 130px">
          <div class="input-group-btn">
            <button class="btn btn-primary btn-plus" id="increase-stock">
              <i class="fa fa-plus"></i>
            </button>
          </div>
          <input  type="number" id="stock-input" class="form-control bg-secondary text-center" style="padding: 5px;" value="1" min="1" max="10" readonly>
          <div class="input-group-btn">
            <button class="btn btn-primary btn-minus" id="decrease-stock">
              <i class="fa fa-minus"></i>
            </button>
          </div>
        </div>

        <div class="ml-3">
          <label class="mr-2">Size:</label>
          <% product.variants.forEach(variant => { %>
          <div class="form-check form-check-inline" 
           style= "<%= variant.stock === 0 ? 'display: none;' : '' %>">
            <input class="form-check-input" type="radio" name="size"
              id="size-<%= variant.size %>" value="<%= variant.size %>" 
              data-stock="<%= variant.stock %>">
            <label class="form-check-label" for="size-<%= variant.size %>">
              <%= variant.size.toUpperCase() %>
            </label>
          </div>
          <% }) %>
          <div id="stock-info">
            <p>Select a size to see stock availability.</p>
          </div>
        </div>
      </div>

      <button type="button" onclick="addToCart()" class="btn btn-primary mt-4 px-3">
        <i class="fa fa-shopping-cart mr-1"></i> Add To Cart
      </button>

    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>


let stockInput = document.getElementById("stock-input");
let stockValue = parseInt(stockInput.value);

document
    .getElementById("increase-stock")
    .addEventListener("click", function () {

      if (stockValue < 5) {
        stockValue++;
        stockInput.value = stockValue;
      } else {
        stockInput.value = 5;
      }
    });

  document
    .getElementById("decrease-stock")
    .addEventListener("click", function () {

      if (stockValue > 1) {
        stockValue--;
        stockInput.value = stockValue;
      } else {
        stockInput.value = 1;
      }
    });

  let selectedSize = 0 ;
  document.addEventListener("DOMContentLoaded", () => {
  const radios = Array.from(document.getElementsByName("size"));
  const stockInfo = document.getElementById("stock-info");

  radios.forEach((radio) => {
    radio.addEventListener("change", () => {
      const stockCount = radio.getAttribute("data-stock");
      const size = radio.value.toUpperCase();
      
      const message = `${size}: <span class="stock-count">${stockCount} in stock</span>.`;
      stockInfo.innerHTML = `<p>${message}</p>`;
    });
  });
});

async function addToCart() {
  const productId = "<%= product._id %>"; 
  const selectedSizeRadio = document.querySelector('input[name="size"]:checked');
  const quantity = parseInt(document.getElementById('stock-input').value);

  
  if (!selectedSizeRadio) {
    Swal.fire({
      icon: 'warning',
      title: 'Size Required',
      text: 'Please select a size before adding to the cart.',
      toast: true,
      position: 'top-end',
      timer: 3000,
      timerProgressBar: true,
      showConfirmButton: false
    });
    return;
  }

  const selectedSize = selectedSizeRadio.value;
  const stockLeft = parseInt(selectedSizeRadio.getAttribute('data-stock'));  

  if (quantity > stockLeft) {
    Swal.fire({
      icon: 'warning',
      title: 'Stock Limit Exceeded',
      text: `Only ${stockLeft} items available for the selected size.`,
      toast: true,
      position: 'top-end',
      timer: 3000,
      timerProgressBar: true,
      showConfirmButton: false
    });
    return; 
  }

  try {
    const response = await fetch('/cart/add', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        productId,
        size: selectedSize,
        quantity,
      }),
    });

    if (response.ok) {
      const result = await response.json(); 

      if (result.type === 'warning') {
        Swal.fire({
          icon: 'warning',
          title: 'Reminder',
          text: result.message || "This product is already in your cart with the selected size.",
          toast: true,
          position: 'top-end',
          timer: 1000,
          showConfirmButton: false,
        });
      } else {
        Swal.fire({
          icon: 'success',
          title: 'Added to Cart',
          text: result.message || "Product added to cart successfully!",
          toast: true,
          position: 'top-end',
          timer: 1000,  
          timerProgressBar: false,
          showConfirmButton: false,
        }).then(() => {
          window.location.href = '/cart'; 
        });
      }
    } else {
      const error = await response.json();
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || "Failed to add product to cart.",
      });
    }
  } catch (error) {
    console.error("Error adding product to cart:", error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An error occurred. Please try again.',
      toast: true,
      position: 'top-end',
      timer: 3000,
      timerProgressBar: true,
      showConfirmButton: false
    });
  }
}

</script>


<%-include("../partials/user/footer")%>




